== Files ==
tsp_sequential.cpp -> Naive, Brute Force Approach
tsp_openmp.cpp -> Parallelize the Brute Force Approach
tsp_branch.cpp -> Implment a branch and bound algorithm sequentially and with openmp
tsp_mpi_branch.cpp -> Implement a branch and bound algorithm using MPI
sa_sequential.cpp -> Sequential version of simulated annealing
sa_openmp.cpp -> simulated annealing using openmp
graph.cpp -> The class used to load and save the graph
anneal.cpp -> IGNORE

The commands are
./tsp_sequential <input file>

./sa_sequential <input file>

./sa_sequential <input file> [<threads> defualt 1]

./tsp_branch <input file> <input file> [<num threads>]

mpirun --hostfile <hostfile> -np [processes] ./tsp_mpi_branch <input file>

./tsp_openmp <input file> <thread numbers> [-a]
-a: enable annealing

== Input File ==

The format of the input file is the number of vertices at the top of the file followed by
their corresponding x, y coordinates on each new line:

x y
x2 y2
...

Some samples are in the locations/ directory

== Compiling ==

run 'make' in the root of the project

=== Annealing ===
temperature at iteration i = temperature / scheduling_fnc
scheduling_fnc generally has asymptotic growth eg log or an s curve

p(accept) = exp( (distance - new_dist) / temp(i) )

It seems like higher starting temperature requires more iterations.
